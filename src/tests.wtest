import sonidos.*
import armas.*
import jugador.*
import enemigos.*
import tablero.*
import mapa.*
import wollok.game.*
import direcciones.*

describe "funcionalidadDelJuego"{
	
	method initialize(){
		game.clear()
		game.cellSize(20)
		game.width(40)
		game.height(30)
		
		encargadoDeSonidos.modoTest(true)
	
	}
	test "destruccionDeNaveEnemigaPorBala"{

		creadorDeBalas.crear()
		
		const bala = game.allVisuals().first()
	
		const naveEnemiga = new NaveBasica(position = game.at(5,5),direccion = null)
		game.addVisual(naveEnemiga)
		//barra.position(game.at(5,1))
		

		
		bala.colision(naveEnemiga)
		
		//assert.that(naveEnemiga.estado() == destruida)
	//	assert.notThat(game.allVisuals().contains(bala))
	}
	
  	test "nave enemiga se mueve cumpliendo la animacion" {
		const nave = new NaveBasica(position = game.at(5,5))
		assert.equals(game.at(5,5), nave.position())
		
		nave.direccion(derecha)
		nave.mover()
		assert.equals(game.at(6,5), nave.position())

	}
	
	test"barra no debe salir del mapa"{
		jugador.position(game.at(1,1))
		jugador.mover(izquierda)
		assert.equals(jugador.position(),game.at(0,1))
		assert.throwsException({jugador.mover(izquierda)})
	}
	
	
}

describe "FlotaNivelUno" {
	
	method initialize(){
		game.clear()
		game.cellSize(20)
		game.width(40)
		game.height(30)
		
		encargadoDeSonidos.modoTest(true)
	
	}
	
	test "estaMuerta" {
		mapa.generar()
		assert.equals(16, flotaNivelUno.enemigos().size()) // depende de las naves enemigas que se agrueguen en el mapa.
		flotaNivelUno.enemigos().first().destruir()
		assert.equals(15, flotaNivelUno.enemigos().size())
		assert.notThat(flotaNivelUno.estaMuerta())
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		flotaNivelUno.enemigos().first().destruir()
		assert.equals(0, flotaNivelUno.enemigos().size())
		assert.that(flotaNivelUno.estaMuerta())
	}
	
}